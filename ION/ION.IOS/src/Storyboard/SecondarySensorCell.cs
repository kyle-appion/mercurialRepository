// This file has been autogenerated from a class added in the UI designer.

using System;
using UIKit;

using Appion.Commons.Measure;

using ION.Core.Content;
using ION.Core.Sensors;
using ION.Core.Sensors.Properties;

namespace ION.IOS.ViewController.Workbench
{
  public class SecondarySensorRecord : SensorPropertyRecord {
    public override WorkbenchTableSource.ViewType viewType {
      get {
        return WorkbenchTableSource.ViewType.Measurement;
      }
    }

		//public SecondarySensorRecord(Manifold manifold, ISensorProperty sensorProperty) : base(manifold, sensorProperty) {
		public SecondarySensorRecord(Sensor sensor, ISensorProperty sensorProperty) : base(sensor, sensorProperty) {

    }

  }

	public partial class SecondarySensorCell : UITableViewCell
	{

    private SecondarySensorRecord record {
      get {
        return __record;
      }

      set {
        if (__record != null) {
					//__record.manifold.onManifoldEvent -= manifoldUpdating;
					__record.sensorProperty.onSensorPropertyChanged -= OnSensorPropertyChanged;
					__record = null;
        }
        __record = value;

        if (__record != null) {
					//__record.manifold.onManifoldEvent += manifoldUpdating;
					__record.sensorProperty.onSensorPropertyChanged += OnSensorPropertyChanged;
					OnSensorPropertyChanged(__record.sensorProperty);
				}
      }
    } SecondarySensorRecord __record;

		public SecondarySensorCell (IntPtr handle) : base (handle)
		{
      
		}


    public void UpdateTo(SecondarySensorRecord record, nfloat cellWidth) {
    	this.Layer.BorderWidth = 1f;
      this.record = record;
      labelTitle.Font = UIFont.BoldSystemFontOfSize(17);
      labelMeasurement.Font = UIFont.SystemFontOfSize(21);

			//if (record.manifold.secondarySensor != null) {
			if (record.sensor.linkedSensor != null) {
				//labelMeasurement.Text = record.manifold.secondarySensor.measurement.amount.ToString("N") + " " + record.manifold.secondarySensor.unit;
				labelMeasurement.Text = record.sensor.linkedSensor.measurement.amount.ToString("N") + " " + record.sensor.linkedSensor.unit;
				//if (record.manifold.secondarySensor.type == ESensorType.Temperature){
					if(record.sensor.linkedSensor.type == ESensorType.Temperature){
					labelTitle.Text = "TEMP";
				} else {
					labelTitle.Text = "PRESS";
				}
      } else {
        labelMeasurement.Text = "Not Linked";
				labelTitle.Text = "Linked";
      }
    }

    public void manifoldUpdating(ManifoldEvent Event){
			//if (record.manifold.secondarySensor != null) {
			if (record.sensor.linkedSensor != null) {
				//labelMeasurement.Text = record.manifold.secondarySensor.measurement.amount.ToString("N") + " " + record.manifold.secondarySensor.unit;
				labelMeasurement.Text = record.sensor.linkedSensor.measurement.amount.ToString("N") + " " + record.sensor.linkedSensor.unit;
				//if (record.manifold.secondarySensor.type == ESensorType.Temperature){
				if(record.sensor.linkedSensor.type == ESensorType.Temperature){
					labelTitle.Text = "TEMP";
				} else {
					labelTitle.Text = "PRESS";
				}
      } else {
        labelMeasurement.Text = "Not Linked";
        labelTitle.Text = "Linked";
      }
	  }

		private void OnSensorPropertyChanged(ISensorProperty sensorProperty)
		{
			//if (record.manifold.secondarySensor != null) {
			if (record.sensor.linkedSensor != null)
			{
				//labelMeasurement.Text = record.manifold.secondarySensor.measurement.amount.ToString("N") + " " + record.manifold.secondarySensor.unit;
				labelMeasurement.Text = record.sensor.linkedSensor.measurement.amount.ToString("N") + " " + record.sensor.linkedSensor.unit;
				//if (record.manifold.secondarySensor.type == ESensorType.Temperature){
				if (record.sensor.linkedSensor.type == ESensorType.Temperature)
				{
					labelTitle.Text = "TEMP";
				}
				else
				{
					labelTitle.Text = "PRESS";
				}
			}
			else
			{
				labelMeasurement.Text = "Not Linked";
				labelTitle.Text = "Linked";
			}
		}
  }
}