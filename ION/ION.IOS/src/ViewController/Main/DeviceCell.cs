// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

using ION.Core.Connections;
using ION.Core.Devices;
using ION.Core.Util;

using ION.IOS.Devices;
using ION.IOS.UI;

namespace ION.IOS.ViewController.Main {
	public partial class DeviceCell : UITableViewCell {

    /// <summary>
    /// The action that is called when the background view is clicked.
    /// </summary>
    /// <value>The on backgroun clicked.</value>
    public Action onBackgroundClicked { get; set; }
    /// <summary>
    /// The action that is called when the DeviceConnect button is clicked.
    /// </summary>
    /// <value>The on device connect clicked.</value>
    public Action onDeviceConnectClicked { get; set; }

    private IDevice device {
      get {
        return __device;
      }
      set {
        if (__device != null) {
          __device.onStateChanged -= OnDeviceStateChanged;
        }

        __device = value;

        if (__device != null) {
          __device.onStateChanged += OnDeviceStateChanged;
          OnDeviceStateChanged(__device);
        }
      }
    } IDevice __device;

		public DeviceCell (IntPtr handle) : base (handle) {
      // Nope
		}

    // Overridden from UITableViewCell
    public override void AwakeFromNib() {
      base.AwakeFromNib();

      viewBackground.AddGestureRecognizer(new UITapGestureRecognizer(() => {
        if (onBackgroundClicked != null) {
          onBackgroundClicked();
        }
      }));

      buttonDeviceConnect.SetBackgroundImage(UIImage.FromBundle("ButtonGold"), UIControlState.Normal);
      buttonDeviceConnect.SetBackgroundImage(UIImage.FromBundle("ButtonBlack"), UIControlState.Highlighted);
      buttonDeviceConnect.TouchUpInside += (object sender, EventArgs e) => {
        if (onDeviceConnectClicked != null) {
          onDeviceConnectClicked();
        }
      };
    }

    /// <summary>
    /// Updates the cell's content to the given device.
    /// </summary>
    /// <param name="device">Device.</param>
    public void Update(IDevice device) {
      this.device = device;      
    }

    private void OnDeviceStateChanged(IDevice device) {
      imageDeviceIcon.Image = DeviceUtil.GetUIImageFromDeviceModel(device.serialNumber.deviceModel);
      labelDeviceType.Text = device.serialNumber.deviceModel.GetTypeString();
      labelDeviceName.Text = device.name;
      activityDeviceConnecting.Hidden = EConnectionState.Connecting != device.connection.connectionState;
    }
	}
}
